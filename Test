return #chests
end  

local function findStrongholdChest()
    local chest = ws:FindFirstChild("Stronghold Diamond Chest")
    if chest then
        local primary = chest:FindFirstChild("PrimaryPart") or chest:FindFirstChildWhichIsA("BasePart")
        if primary then
            return primary
        end
    end
    
    for _, obj in ipairs(ws:GetDescendants()) do
        if obj:IsA("Model") and string.find(string.lower(obj.Name), "stronghold") and string.find(string.lower(obj.Name), "chest") then
            local primary = obj:FindFirstChild("PrimaryPart") or obj:FindFirstChildWhichIsA("BasePart")
            if primary then
                return primary
            end
        end
    end
    
    for _, obj in ipairs(ws:GetDescendants()) do
        if (obj:IsA("Model") or obj:IsA("Part")) and string.find(string.lower(obj.Name), "stronghold") then
            local primary = obj:FindFirstChild("PrimaryPart") or obj:FindFirstChildWhichIsA("BasePart")
            if primary then
                return primary
            end
        end
    end
    
    return nil
end

local function teleportToChest()
    if not hrp then return false end
    
    local chestPart = findStrongholdChest()
    if chestPart then
        diamondText.Text = "Teleporting to chest..."
        
        pcall(function()
            hrp.CFrame = chestPart.CFrame + Vector3.new(0, 5, 0)
        end)
        
        for _, child in ipairs(chestPart.Parent:GetDescendants()) do
            if child:IsA("ProximityPrompt") then
                for i = 1, 5 do
                    pcall(fireproximityprompt, child)
                    task.wait(0.1)
                end
            end
        end
        
        return true
    end
    
    return false
end

local function hopServer()  
    diamondText.Text = "Finding server..."
    
    sendWebhook()
    serverDiamonds = 0
    
    local servers = {}
    local success, result = pcall(function()
        local url = "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Asc&limit=100"
        local response = game:HttpGet(url)
        return hs:JSONDecode(response)
    end)
    
    if success and result and result.data then
        for _, server in ipairs(result.data) do
            if server.playing < server.maxPlayers and server.id ~= game.JobId then
                table.insert(servers, server.id)
            end
        end
        
        if #servers > 0 then
            local randomServer = servers[math.random(1, #servers)]
            tps:TeleportToPlaceInstance(placeId, randomServer, lp)
            return true
        end
    end
    
    pcall(function()
        tps:Teleport(placeId, lp)
    end)
    
    return false
end

local function isDead()
    local chars = ws:FindFirstChild("Characters")
    if chars then
        for _, child in ipairs(chars:GetChildren()) do
            if string.find(child.Name:lower(), lp.Name:lower()) or 
               (displayName and string.find(child.Name:lower(), displayName:lower())) then
                return true
            end
        end
    end
    
    if lp.Character then
        local hum = lp.Character:FindFirstChildOfClass("Humanoid")
        if hum and hum.Health <= 0 then
            return true
        end
    end
    
    return false
end

local function cleanChars()
    local chars = ws:FindFirstChild("Characters")
    if chars then
        for _, child in ipairs(chars:GetChildren()) do
            local isPlayer = false
            
            if string.find(child.Name:lower(), lp.Name:lower()) then
                isPlayer = true
            end
            
            if displayName and string.find(child.Name:lower(), displayName:lower()) then
                isPlayer = true
            end
            
            if not isPlayer then
                pcall(function()
                    child:Destroy()
                end)
            end
        end
    end
end

local function setupAutoExec()
    if not rs:FindFirstChild("DiamondFarmMarker") then
        local marker = Instance.new("StringValue")
        marker.Name = "DiamondFarmMarker"
        marker.Value = "DiamondFarmScript"
        marker.Parent = rs
    end
    
    if rs:FindFirstChild("DiamondFarmTeleported") then
        rs:FindFirstChild("DiamondFarmTeleported"):Destroy()
        
        wait(5)
        
        startFarm()
        return
    end
end

local function prepTeleport()
    local teleportMarker = Instance.new("BoolValue")
    teleportMarker.Name = "DiamondFarmTeleported"
    teleportMarker.Value = true
    teleportMarker.Parent = rs
end

local function hopWithAuto()
    prepTeleport()
    return hopServer()
end

cleanChars()

local function startFarm()
    task.spawn(function()  
        local hopCount = 0
        local chestCheck = 0
        
        while true do
            cleanChars()
            
            if isDead() then
                diamondText.Text = "Dead, hopping..."
                hopWithAuto()
                task.wait(10)
            end
            
            if lp.Character and hrp then
                local chestsOpened = fireChests()
                
                scanDiamonds()
                
                chestCheck = chestCheck + 1
                if chestCheck >= 2 then
                    chestCheck = 0
                    if teleportToChest() then
                        diamondText.Text = "Found chest!"
                        task.wait(2)
                    end
                end
                
                hopCount = hopCount + 1
                if hopCount >= 5 then
                    hopCount = 0
                    task.wait(2)
                    hopWithAuto()
                    task.wait(5)
                else
                    task.wait(1)
                end
            else
                task.wait(1)
            end
        end  
    end)
end

tps.TeleportInitFailed:Connect(function(player, result, error)
    diamondText.Text = "Teleport failed"
    task.wait(3)
    hopWithAuto()
end)

setupAutoExec()

startFarm()
